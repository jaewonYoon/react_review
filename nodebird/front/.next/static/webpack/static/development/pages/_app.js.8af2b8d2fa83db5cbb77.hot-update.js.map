{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.8af2b8d2fa83db5cbb77.hot-update.js","sources":["webpack:///./reducers/user.js","webpack:///./sagas/user.js"],"sourcesContent":["const dummyUser = {\r\n    nickname: 'Jay',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [], \r\n    id: 1\r\n};\r\n\r\nconst initialState={\r\n    isLoggedIn: false, //로그인 여부 \r\n    isLoggingOut: false, //로그아웃 시도중 \r\n    isLoggingIn: false, //로그인 시도중 \r\n    loginErrorReason: '', //로그인 에러 사유 \r\n    signedUp: false, //회원가입 성공\r\n    isSigningUp: false, //회원가입 시도 중 \r\n    signUpErrorReason: '', //회원가입 실패 사유\r\n    me: null, //내 정보 \r\n    followingList: [], //팔로잉 리스트,\r\n    follwerList: [], //팔로워 리스트,\r\n    userInfo: null, //남의 정보\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS= 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE= 'LOG_IN_FAILURE'; \r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\r\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'; \r\n\r\nexport const signUpAction = data => ({\r\n    type: SIGN_UP_REQUEST,\r\n    data\r\n});\r\nexport const signUpSuccess = {\r\n    type: SIGN_UP_SUCCESS\r\n}\r\nexport const loginRequestAction = data => ({\r\n    type: LOG_IN_REQUEST,\r\n    data\r\n});\r\nexport const logoutRequestAction = ({\r\n    type: LOG_OUT_REQUEST \r\n}); \r\nexport const signUpRequestAction = data => ({\r\n    type: SIGN_UP_REQUEST,\r\n    data \r\n});\r\n\r\nexport const loginAction = data => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data: {\r\n            nickname: 'Jay',\r\n        }\r\n    }\r\n};\r\nexport const logoutAction = {\r\n    type: LOG_OUT_REQUEST,\r\n}\r\n\r\nexport default (state=initialState,action) => {\r\n    switch(action.type){\r\n        case LOG_IN_REQUEST:{\r\n            return {\r\n                ...state,\r\n                isLoggingIn:true,\r\n                }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return{\r\n                ...state,\r\n                isLoggedIn: true,\r\n                isLoading: false,\r\n                me: action.data,\r\n                isLoading: false,\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: false,\r\n                logInErrorReason: action.error,\r\n                me: null \r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n            }\r\n        }\r\n        case LOG_OUT_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                isLoggingOut: false,\r\n                me: null,\r\n            }\r\n        }\r\n        case LOAD_USER_REQUEST : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case LOAD_USER_SUCCESS : {\r\n            return{\r\n                ...state,\r\n                me: action.data\r\n            }\r\n        }\r\n        case LOAD_USER_FAILURE : {\r\n             return {\r\n                 ...state,\r\n             }\r\n        }\r\n        case SIGN_UP_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isSigningUp: true, \r\n            }\r\n        }\r\n        case SIGN_UP_SUCCESS : {\r\n            return{\r\n                ...state,\r\n                isSigningUp:false,\r\n                isSignedUp: true,\r\n            }\r\n        }\r\n        case SIGN_UP_FAILURE : {\r\n             return {\r\n                 ...state,\r\n                 isSigningUp:false,\r\n                 signUpErrorReason: action.error\r\n             }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data, \r\n            };\r\n        }\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport {all, fork, delay, call, put ,takeLatest, takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n    LOG_OUT_REQUEST,LOG_OUT_SUCCESS,LOG_OUT_FAILURE,\r\n    LOAD_USER_REQUEST,LOAD_USER_SUCCESS,LOAD_USER_FAILURE\r\n} from '../reducers/user';\r\n// take은 기다리고 자동으로 .next()함수를 호출해주는 것, put은 dispatch해주는 것 \r\n\r\naxios.defaults.baseURL = 'http://localhost:3002/api'; \r\n\r\nfunction loginAPI(loginData) {\r\n    console.log(loginData);\r\n    //서버에 API 요청을 보내는 부분 \r\n    return axios.post('/user/login', loginData, {\r\n        withCredentials:true\r\n    });\r\n}\r\nfunction* login(action){\r\n    try{\r\n        const result = yield call(loginAPI, action.data); //실패하면 catch(e)로 \r\n        yield put({ //loginAPI 성공 \r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(e) {\r\n        console.error(e); \r\n        yield put( {//loginAPI 실패 \r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, login); //disaptch에서 action으로 들어가는 것 위의 login(action)으로 전달 됨 \r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout',{},{ \r\n    widthCredentials:true });\r\n}\r\nfunction* logout() {\r\n    try{\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS\r\n        });\r\n    }catch(e){\r\n        yield put({\r\n            type: LOG_OUT_FAILURE\r\n        })\r\n    }\r\n}\r\nfunction* watchLogout() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\n\r\n\r\nfunction loadUserAPI() {\r\n    return axios.get('/user/',{\r\n        withCredentials: true\r\n    });\r\n}\r\nfunction* loadUser() {\r\n    try{\r\n        const result = yield call(loadUserAPI);\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data\r\n        });\r\n    }catch(e){\r\n        yield put({\r\n            type: LOAD_USER_FAILURE\r\n        })\r\n    }\r\n}\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\n\r\nfunction* signUpAPI(signUpData) {\r\n    return axios.post('/user', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try{\r\n        // 첫번째 인자는 함수, 두번쨰 인자는 첫번째 함수 인자로 전달된다. \r\n        yield call(signUpAPI,action.data);\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS,\r\n        });\r\n    }catch(e) {\r\n        console.error(e);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n            error: e \r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogout),\r\n        fork(watchSignUp),\r\n        fork(watchLoadUser)\r\n    ]) \r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAZA;AAcA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AADA;AAGA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AAhFA;AAkFA;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;;;AAcA;;;AAQA;;;AAYA;;;AAUA;;;AAaA;;;AAKA;;;AAIA;;;AAgBA;;;AAKA;AACA;AA3GA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAGA;AAAA;AACA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAQA;AARA;AASA;AAAA;AACA;AADA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}