{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.15ba13dd88625ee93c8f.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React,{useState,useCallback,useEffect} from 'react';\r\nimport {Form, Input, Checkbox, Button} from 'antd';\r\nimport Router from 'next/router';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {signUpRequestAction, LOAD_FOLLOW_REQUEST} from '../reducers/user';\r\n\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value,setter] = useState(initValue);\r\n    const handler = useCallback( (e) =>{\r\n        setter(e.target.value);\r\n    },[]);\r\n    return [value, handler]; \r\n};\r\n\r\nconst Signup = () => {\r\n    const [userCredentials, setCredentials]= useState({\r\n        id: '',\r\n        nickname: '', \r\n        email: '',\r\n        password: '',\r\n        password_chk :'',\r\n        term: false, \r\n    })\r\n    const {id,nickname,password,password_chk, term} = userCredentials;\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const {isSigningUp, me} = useSelector((state) => state.user);\r\n    useEffect( () => {\r\n        if(me) {\r\n            alert('로그인 했으니 메인페이지로 이동합니다. ')\r\n            Router.push('/')\r\n        }\r\n    },[me && me.id]);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(password_chk !== password){\r\n            setPasswordError(true);\r\n            return false;  \r\n        } else setPasswordError(false); \r\n        if(!term){\r\n            setTermError(true); \r\n            return false; \r\n        }\r\n        setTermError(false); \r\n        setPasswordError(false);\r\n        console.log('11');\r\n        dispatch(signUpRequestAction({\r\n            userId: id,\r\n            nickname,\r\n            password\r\n        }))\r\n    },[id,nick,password,password_chk, term]);\r\n    const onChange = (e) => {\r\n        const {name,value} = e.target;\r\n        if(name==='term'){\r\n            setCredentials({...userCredentials, [name]: e.target.checked});\r\n        }\r\n        else setCredentials({...userCredentials, [name]:value});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{padding:10}}>\r\n                <div>\r\n                    <label htmlFor=\"id\">아이디</label>\r\n                    <br/>\r\n                    <Input name=\"id\" required onChange={onChange}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"nickname\">닉네임</label>\r\n                    <br/>\r\n                    <Input name=\"nickname\" required onChange={onChange}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">비밀번호</label>\r\n                    <br/>\r\n                    <Input name=\"password\" type=\"password\" required onChange={onChange}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password_chk\">비밀번호 확인</label>\r\n                    {\r\n                        passwordError ? \r\n                        <p>비밀번호가 일치하지 않습니다.</p>:\r\n                        null\r\n                    }\r\n                    <br/>\r\n                    <Input name=\"password_chk\" type=\"password\" required onChange={onChange}/>\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"term\"  required checked={userCredentials.term} onChange={onChange}>회원가입에 동의합니다.</Checkbox>\r\n                    {\r\n                        termError ?\r\n                        <span style={{color:'blue'}}>약관에 동의해주세요.</span>: \r\n                        null \r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Signup;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAWA;AACA;AAbA;AAaA;AAAA;AAbA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}