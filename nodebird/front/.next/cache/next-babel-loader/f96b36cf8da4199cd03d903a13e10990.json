{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'Jay'\n    },\n    content: '첫 번째 게시글',\n    img: 'https://images.unsplash.com/photo-1575550590262-4ad1d8738faa?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80',\n    Comments: []\n  }],\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: false,\n  //포스트 업로드 실패  \n  isAddingPost: false,\n  //포스트 업로드 중\n  postAdded: false,\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false\n};\nconst dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: 'jay'\n  },\n  content: '나는 더미입니다.'\n};\nconst dummyComment = {\n  User: {\n    id: 1,\n    nickname: 'Jay'\n  },\n  createdAt: new Date(),\n  content: '더미 댓글입니다.'\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data, ...state.mainPosts],\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Comments = [...post.Comments, dummyComment];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts,\n          postAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","img","Comments","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","dummyPost","dummyComment","createdAt","Date","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","reducer","state","action","type","data","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["const initialState= {\r\n    mainPosts: [{\r\n        id:1, \r\n        User:{\r\n            id: 1,\r\n            nickname: 'Jay',\r\n        },\r\n        content: '첫 번째 게시글',\r\n        img: 'https://images.unsplash.com/photo-1575550590262-4ad1d8738faa?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80',\r\n        Comments: []\r\n    }],\r\n    imagePaths: [], // 미리보기 이미지 경로\r\n    addPostErrorReason: false, //포스트 업로드 실패  \r\n    isAddingPost: false, //포스트 업로드 중\r\n    postAdded: false,\r\n    isAddingComment: false, \r\n    addCommentErrorReason: '', \r\n    commentAdded: false\r\n}\r\n\r\nconst dummyPost = {\r\n    id: 2, \r\n    User: {\r\n       id: 1,\r\n       nickname: 'jay',\r\n    },\r\n    content: '나는 더미입니다.'\r\n}\r\nconst dummyComment = {\r\n    User: {\r\n        id: 1,\r\n        nickname:'Jay' \r\n    },\r\n    createdAt: new Date(),\r\n    content: '더미 댓글입니다.'\r\n}\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST= 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS= 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE= 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST= 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS= 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE= 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST= 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS= 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE= 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state, \r\n                isAddingPost:true,\r\n                addPostErrorReason: '',\r\n                postAdded: false \r\n            };\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n                postAdded: true \r\n            }\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.error,\r\n            };\r\n        }\r\n        case LOAD_MAIN_POSTS_REQUEST: {\r\n            return {\r\n                ...state, \r\n                mainPosts: []\r\n            };\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                mainPosts: action.data,\r\n            }\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case ADD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n                commentAdded: false, \r\n            }\r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex( v=> v.id ===action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = [...post.Comments, dummyComment];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = {...post,Comments}; \r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts,\r\n                postAdded: true\r\n            }\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason: action.error \r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state \r\n            }\r\n        }\r\n    }\r\n}   \r\n\r\nexport default reducer; "]},"metadata":{},"sourceType":"module"}