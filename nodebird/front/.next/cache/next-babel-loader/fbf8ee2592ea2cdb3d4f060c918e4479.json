{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaewon\\\\Desktop\\\\web\\\\react_review\\\\nodebird\\\\front\\\\components\\\\PostCard.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Icon, Button, Avatar, Input, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var _useState2 = useState(''),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onSubmitComment = useCallback(function (e) {\n    e.preventDefault();\n  });\n  var onChangeCommentText = useCallback(function () {}, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    actions: [__jsx(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"message\",\n      key: \"message\",\n      onClick: onToggleComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), __jsx(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })],\n    extra: __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, post.User.nickname[0]),\n    title: post.User.nicname,\n    description: post.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\uC090\\uC57D\")), __jsx(List, {\n    header: \"\".concat(post.Comments ? post.Comments.length : 0, \"\\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comment || [],\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(Comment, {\n        author: item.User.nick,\n        avatar: __jsx(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, item.User.nick[0]),\n        content: item.content,\n        datetime: item.createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/components/PostCard.jsx"],"names":["React","useState","useCallback","useSelector","useDispatch","Card","Icon","Button","Avatar","Input","List","Comment","PropTypes","PostCard","post","dispatch","commentFormOpened","setCommentFormOpened","commentText","setCommentText","state","user","me","onToggleComment","prev","onSubmitComment","e","preventDefault","onChangeCommentText","createdAt","img","User","nickname","nicname","content","Comments","length","item","nick","propTypes","shape","object","string"],"mappings":"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","sourcesContent":["import React,{useState, useCallback} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {Card, Icon, Button, Avatar, Input,List, Comment} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nconst PostCard =({post}) => {\r\n    const dispatch = useDispatch();\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [commentText, setCommentText] = useState('');\r\n    const {me} = useSelector(state => state.user);\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened(prev => !prev);\r\n    },[]);\r\n    const onSubmitComment = useCallback((e) => {\r\n        e.preventDefault();\r\n    })\r\n    const onChangeCommentText = useCallback(() => {\r\n\r\n    }, []);\r\n    return(\r\n        <div>\r\n        <Card \r\n            key={+post.createdAt}\r\n            cover={post.img && <img alt=\"example\" src={post.img} />}\r\n            actions={[\r\n                <Icon type=\"retweet\" key=\"retweet\" />,\r\n                <Icon type=\"heart\" key=\"heart\" />,\r\n                <Icon type=\"message\" key=\"message\" onClick={onToggleComment}/>,\r\n                <Icon type=\"ellipsis\" key=\"ellipsis\" />\r\n            ]}\r\n            extra={<Button>팔로우</Button>}\r\n        >\r\n            <Card.Meta\r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nicname}\r\n                description={post.content}\r\n            />\r\n        </Card>\r\n            {commentFormOpened && (\r\n                <>\r\n                    <Form onSubmit = {onSubmitComment}>\r\n                        <Form.Item>\r\n                            <Input.TextArea rows={4} value = {commentText} onChange={onChangeCommentText} />\r\n                        </Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n                    </Form>\r\n                    <List\r\n                        header={`${post.Comments ? post.Comments.length: 0}댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comment || []}\r\n                        renderItem= {item => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nick}\r\n                                    avatar={<Avatar>{item.User.nick[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                    datetime={item.createdAt}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes ={\r\n    post: PropTypes.shape({\r\n        User: PropTypes.object,\r\n        content:PropTypes.string,\r\n        img:PropTypes.string,\r\n        createdAt:PropTypes.object\r\n    })\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}