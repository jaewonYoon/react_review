{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, delay, call, put, takeEvery } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\nconst HELLO_SAGA = 'HELLO_SAGA';\n\nfunction loginAPI() {//서버에 API 요청을 보내는 부분 \n  // return axios.post('/login');\n}\n\nfunction* login() {\n  try {\n    yield delay(2000);\n    yield call(loginAPI); //실패하면 catch(e)로 \n\n    yield put({\n      //loginAPI 성공 \n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      //loginAPI 실패 \n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction* signUpAPI() {\n  return axios.post('/login');\n}\n\nfunction* signUp() {}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin)]);\n}","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/sagas/user.js"],"names":["axios","all","fork","delay","call","put","takeEvery","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","HELLO_SAGA","loginAPI","login","type","e","console","error","watchLogin","signUpAPI","post","signUp","watchSignUp","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAsCC,SAAtC,QAAsD,oBAAtD;AACA,SACIC,cADJ,EACoBC,cADpB,EACoCC,cADpC,EAEIC,eAFJ,EAEqBC,eAFrB,EAEsCC,eAFtC,QAGO,kBAHP;AAKA,MAAMC,UAAU,GAAG,YAAnB;;AAEA,SAASC,QAAT,GAAoB,CAChB;AACA;AACH;;AACD,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,IAAI,CAACU,QAAD,CAAV,CAFD,CAEuB;;AACtB,UAAMT,GAAG,CAAC;AAAE;AACRW,MAAAA,IAAI,EAAER;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAMS,CAAN,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMZ,GAAG,CAAE;AAAC;AACRW,MAAAA,IAAI,EAAEP;AADC,KAAF,CAAT;AAGH;AACJ;;AACD,UAAUW,UAAV,GAAuB;AACnB,QAAMd,SAAS,CAACC,cAAD,EAAiBQ,KAAjB,CAAf;AACH;;AAED,UAAUM,SAAV,GAAsB;AAClB,SAAOrB,KAAK,CAACsB,IAAN,CAAW,QAAX,CAAP;AACH;;AAED,UAAUC,MAAV,GAAmB,CAElB;;AAED,UAAUC,WAAV,GAAwB;AACpB,QAAMlB,SAAS,CAACI,eAAD,EAAkBa,MAAlB,CAAf;AACH;;AAGD,eAAe,UAAUE,QAAV,GAAqB;AAChC,QAAMxB,GAAG,CAAC,CACNC,IAAI,CAACkB,UAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\r\nimport {all, fork, delay, call, put , takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE\r\n} from '../reducers/user';\r\n\r\nconst HELLO_SAGA = 'HELLO_SAGA'; \r\n\r\nfunction loginAPI() {\r\n    //서버에 API 요청을 보내는 부분 \r\n    // return axios.post('/login');\r\n}\r\nfunction* login(){\r\n    try{\r\n        yield delay(2000);\r\n        yield call(loginAPI); //실패하면 catch(e)로 \r\n        yield put({ //loginAPI 성공 \r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        console.error(e); \r\n        yield put( {//loginAPI 실패 \r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction* signUpAPI() {\r\n    return axios.post('/login');\r\n}\r\n\r\nfunction* signUp() {\r\n\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n    ]) \r\n}"]},"metadata":{},"sourceType":"module"}