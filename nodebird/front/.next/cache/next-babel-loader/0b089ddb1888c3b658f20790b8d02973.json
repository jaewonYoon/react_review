{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaewon\\\\Desktop\\\\web\\\\react_review\\\\nodebird\\\\front\\\\components\\\\PostForm.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    setText('');\n  }, [postAdded === true]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    console.log(text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text.trim()\n      }\n    });\n  }, [text]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  });\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" \\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uC9F9\\uCA31\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, imagePaths.map((v, i) => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3000/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/components/PostForm.jsx"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","imagePaths","isAddingPost","postAdded","state","post","onSubmitForm","e","preventDefault","trim","alert","console","log","type","data","content","onChangeText","target","value","margin","float","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React,{useCallback,useState,useEffect} from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [text,setText] = useState('');\r\n    const {imagePaths, isAddingPost, postAdded} = useSelector( (state) => state.post); \r\n    useEffect( () => {\r\n        setText('');\r\n    },[postAdded===true]);\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault(); \r\n        if(!text || !text.trim()){\r\n            return alert('게시글을 작성하세요.');\r\n        }\r\n        console.log(text);\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                content: text.trim(), \r\n            }\r\n        })\r\n    },[text]);\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }); \r\n    return (\r\n    <Form style={{margin: '10px 0 20px'}} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n                    <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" onChange={onChangeText}/>    \r\n                    <div>\r\n                        <input type=\"file\" multiple hidden />\r\n                        <Button> 이미지 업로드</Button>\r\n                        <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\" loading={isAddingPost}>짹쨱</Button>\r\n                    </div>\r\n                    <div>\r\n                        {imagePaths.map( (v,i) => {\r\n                            return (\r\n                                <div key={v} style={{display: 'inline-block'}}>\r\n                                    <img src={'http://localhost:3000/' + v} style={{width:'200px'}} alt={v} />\r\n                                    <div>\r\n                                        <Button>제거</Button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div> \r\n                </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}