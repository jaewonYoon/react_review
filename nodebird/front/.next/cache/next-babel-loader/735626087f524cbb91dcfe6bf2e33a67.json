{"ast":null,"code":"import { all, fork, put, takeEvery, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_REQUEST, ADD_COMMENT_FAILURE } from '../reducers/post';\naxios.defaults.baseURL = 'http://localhost:3002/api';\n\nfunction* addPostAPI(postData) {\n  return axios.post('/api/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    yield call(addPostAPI, action.data); //addPostAPI의 postData 로 들어간다.\n\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {} // ADD_COMMENT_REQUEST에 대한 action \n\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/sagas/post.js"],"names":["all","fork","put","takeEvery","takeLatest","delay","axios","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_REQUEST","ADD_COMMENT_FAILURE","defaults","baseURL","addPostAPI","postData","post","withCredentials","addPost","action","call","data","type","e","error","watchAddPost","addCommentAPI","addComment","postId","watchAddComment","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAkBC,GAAlB,EAAuBC,SAAvB,EAAkCC,UAAlC,EAA8CC,KAA9C,QAA0D,oBAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,gBADJ,EACsBC,gBADtB,EACwCC,gBADxC,EAEIC,mBAFJ,EAEyBC,mBAFzB,EAE8CC,mBAF9C,QAGO,kBAHP;AAKAN,KAAK,CAACO,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;;AAEA,UAAUC,UAAV,CAAqBC,QAArB,EAA8B;AAC1B,SAAOV,KAAK,CAACW,IAAN,CAAW,WAAX,EAAuBD,QAAvB,EAAiC;AACpCE,IAAAA,eAAe,EAAE;AADmB,GAAjC,CAAP;AAIH;;AACD,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAG;AACC,UAAMC,IAAI,CAACN,UAAD,EAAaK,MAAM,CAACE,IAApB,CAAV,CADD,CACqC;;AACpC,UAAMpB,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAAEhB;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMiB,CAAN,EAAQ;AACN,UAAMtB,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAACf,gBADC;AAENiB,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AACD,UAAUE,YAAV,GAAyB;AACrB,QAAMtB,UAAU,CAACK,gBAAD,EAAmBU,OAAnB,CAAhB;AACH;;AAED,SAASQ,aAAT,GAAwB,CAEvB,C,CACD;;;AACA,UAAUC,UAAV,CAAqBR,MAArB,EAA6B;AACzB,MAAG;AACC,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMH,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAAEb,mBADA;AAENY,MAAAA,IAAI,EAAC;AACDO,QAAAA,MAAM,EAAET,MAAM,CAACE,IAAP,CAAYO;AADnB;AAFC,KAAD,CAAT;AAMH,GARD,CAQE,OAAML,CAAN,EAAS;AACP,UAAMtB,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAAEX,mBADA;AAENa,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AACD,UAAUM,eAAV,GAA2B;AACvB,QAAM1B,UAAU,CAACO,mBAAD,EAAsBiB,UAAtB,CAAhB;AACH;;AAGD,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAM/B,GAAG,CAAC,CACNC,IAAI,CAACyB,YAAD,CADE,EAENzB,IAAI,CAAC6B,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all,fork, put, takeEvery, takeLatest, delay} from 'redux-saga/effects'\r\nimport axios from 'axios'; \r\nimport { \r\n    ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST,\r\n    ADD_COMMENT_SUCCESS, ADD_COMMENT_REQUEST, ADD_COMMENT_FAILURE\r\n} from '../reducers/post';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3002/api'; \r\n\r\nfunction* addPostAPI(postData){\r\n    return axios.post('/api/post',postData, {\r\n        withCredentials: true, \r\n    });\r\n\r\n}\r\nfunction* addPost(action) {\r\n    try{\r\n        yield call(addPostAPI, action.data) //addPostAPI의 postData 로 들어간다.\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n        })\r\n    } catch(e){ \r\n        yield put({\r\n            type:ADD_POST_FAILURE,\r\n            error: e\r\n        })\r\n    }\r\n}\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction addCommentAPI(){\r\n    \r\n}\r\n// ADD_COMMENT_REQUEST에 대한 action \r\nfunction* addComment(action) {\r\n    try{\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data:{\r\n                postId: action.data.postId\r\n            }\r\n        }); \r\n    } catch(e) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e \r\n        })\r\n    }\r\n}\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}