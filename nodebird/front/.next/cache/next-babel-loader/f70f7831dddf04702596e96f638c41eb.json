{"ast":null,"code":"import { all, fork, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\n\nfunction loginAPI() {}\n\nfunction* login() {\n  try {\n    yield call(loginAPI); //실패하면 catch(e)로 \n\n    yield put({\n      //loginAPI 성공 \n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      //loginAPI 실패 \n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN, login);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin)]);\n}","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/sagas/user.js"],"names":["all","fork","takeLatest","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","loginAPI","login","call","put","type","e","console","error","watchLogin","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,MAAR,EAAgBC,cAAhB,EAAgCC,cAAhC,QAAqD,kBAArD;;AACA,SAASC,QAAT,GAAoB,CAEnB;;AACD,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC,UAAMC,IAAI,CAACF,QAAD,CAAV,CADD,CACuB;;AACtB,UAAMG,GAAG,CAAC;AAAE;AACRC,MAAAA,IAAI,EAAEN;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMO,CAAN,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMF,GAAG,CAAE;AAAC;AACRC,MAAAA,IAAI,EAAEL;AADC,KAAF,CAAT;AAGH;AACJ;;AAED,UAAUS,UAAV,GAAuB;AACnB,QAAMZ,UAAU,CAACC,MAAD,EAASI,KAAT,CAAhB;AACH;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CACNC,IAAI,CAACa,UAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import {all, fork, takeLatest} from 'redux-saga/effects';\r\nimport {LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE} from '../reducers/user';\r\nfunction loginAPI() {\r\n\r\n}\r\nfunction* login(){\r\n    try{\r\n        yield call(loginAPI); //실패하면 catch(e)로 \r\n        yield put({ //loginAPI 성공 \r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        console.error(e); \r\n        yield put( {//loginAPI 실패 \r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN, login);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}