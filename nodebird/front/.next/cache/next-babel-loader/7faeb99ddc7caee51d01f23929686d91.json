{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\nvar HELLO_SAGA = 'HELLO_SAGA';\n\nfunction loginAPI() {//서버에 API 요청을 보내는 부분 \n}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            //loginAPI 성공 \n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 12;\n          return put({\n            //loginAPI 실패 \n            type: LOG_IN_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          takeEvery(LOG_IN, login);\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([watchLogin() // watchSignUp()\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/sagas/user.js"],"names":["login","watchLogin","userSaga","all","fork","takeLatest","call","put","take","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","HELLO_SAGA","loginAPI","type","console","error","takeEvery"],"mappings":";;;;yBAQUA,K;;;yBAaAC,U;;;yBAGeC,Q;;AAxBzB,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,UAAnB,EAA+BC,IAA/B,EAAqCC,GAArC,EAA0CC,IAA1C,QAAqD,oBAArD;AACA,SAAQC,MAAR,EAAgBC,cAAhB,EAAgCC,cAAhC,QAAqD,kBAArD;AAEA,IAAMC,UAAU,GAAG,YAAnB;;AAEA,SAASC,QAAT,GAAoB,CAChB;AACH;;AACD,SAAUb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMM,IAAI,CAACO,QAAD,CAAV;;AAFR;AAAA;AAGQ,iBAAMN,GAAG,CAAC;AAAE;AACRO,YAAAA,IAAI,EAAEJ;AADA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQK,UAAAA,OAAO,CAACC,KAAR;AAPR;AAQQ,iBAAMT,GAAG,CAAE;AAAC;AACRO,YAAAA,IAAI,EAAEH;AADC,WAAF,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUV,UAAV;AAAA;AAAA;AAAA;AAAA;AACIgB,UAAAA,SAAS,CAACR,MAAD,EAAST,KAAT,CAAT;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNF,UAAU,EADJ,CAEN;AAFM,WAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all, fork, takeLatest, call, put ,take} from 'redux-saga/effects';\r\nimport {LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE} from '../reducers/user';\r\n\r\nconst HELLO_SAGA = 'HELLO_SAGA'; \r\n\r\nfunction loginAPI() {\r\n    //서버에 API 요청을 보내는 부분 \r\n}\r\nfunction* login(){\r\n    try{\r\n        yield call(loginAPI); //실패하면 catch(e)로 \r\n        yield put({ //loginAPI 성공 \r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        console.error(e); \r\n        yield put( {//loginAPI 실패 \r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\nfunction* watchLogin() {\r\n    takeEvery(LOG_IN, login);\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        watchLogin(),\r\n        // watchSignUp()\r\n    ]) \r\n}"]},"metadata":{},"sourceType":"module"}