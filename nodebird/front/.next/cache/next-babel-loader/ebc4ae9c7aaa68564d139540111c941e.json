{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logout),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogout),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUpAPI),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport axios from 'axios';\nimport { all, fork, delay, call, put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from '../reducers/user'; // take은 기다리고 자동으로 .next()함수를 호출해주는 것, put은 dispatch해주는 것 \n\nfunction loginAPI() {//서버에 API 요청을 보내는 부분 \n  // return axios.post('/login');\n}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(2000);\n\n        case 3:\n          _context.next = 5;\n          return call(loginAPI);\n\n        case 5:\n          _context.next = 7;\n          return put({\n            //loginAPI 성공 \n            type: LOG_IN_SUCCESS\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 14;\n          return put({\n            //loginAPI 실패 \n            type: LOG_IN_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 3:\n          _context3.next = 9;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 9;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 5]]);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction signUpAPI(signUpData) {\n  return _regeneratorRuntime.wrap(function signUpAPI$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", axios.post('http://localhost:3065/api/userlogin'));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context6.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context6.next = 12;\n          break;\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context6.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return all([fork(watchLogin), fork(watchLogout), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/sagas/user.js"],"names":["login","watchLogin","logout","watchLogout","signUpAPI","signUp","watchSignUp","userSaga","axios","all","fork","delay","call","put","takeLatest","takeEvery","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","loginAPI","type","console","error","signUpData","post","action","data"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {all, fork, delay, call, put ,takeLatest, takeEvery} from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n    LOG_OUT_REQUEST,LOG_OUT_SUCCESS,LOG_OUT_FAILURE\r\n} from '../reducers/user';\r\n// take은 기다리고 자동으로 .next()함수를 호출해주는 것, put은 dispatch해주는 것 \r\n\r\nfunction loginAPI() {\r\n    //서버에 API 요청을 보내는 부분 \r\n    // return axios.post('/login');\r\n}\r\nfunction* login(){\r\n    try{\r\n        yield delay(2000);\r\n        yield call(loginAPI); //실패하면 catch(e)로 \r\n        yield put({ //loginAPI 성공 \r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        console.error(e); \r\n        yield put( {//loginAPI 실패 \r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction* logout() {\r\n    try{\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS\r\n        });\r\n    }catch(e){\r\n        yield put({\r\n            type: LOG_OUT_FAILURE\r\n        })\r\n    }\r\n}\r\nfunction* watchLogout() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\nfunction* signUpAPI(signUpData) {\r\n\r\n    return axios.post('http://localhost:3065/api/userlogin');\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try{\r\n        // 첫번째 인자는 함수, 두번쨰 인자는 첫번째 함수 인자로 전달된다. \r\n        yield call(signUpAPI,action.data);\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS,\r\n        });\r\n    }catch(e) {\r\n        console.error(e);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n            error: e \r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogout),\r\n        fork(watchSignUp),\r\n    ]) \r\n}"]},"metadata":{},"sourceType":"module"}