{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\jaewon\\\\Desktop\\\\web\\\\react_review\\\\nodebird\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signUpRequestAction, LOAD_FOLLOW_REQUEST } from '../reducers/user';\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const {\n    0: userCredentials,\n    1: setCredentials\n  } = useState({\n    id: '',\n    nickname: '',\n    email: '',\n    password: '',\n    password_chk: '',\n    term: false\n  });\n  const {\n    id,\n    nickname,\n    password,\n    password_chk,\n    term\n  } = userCredentials;\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const dispatch = useDispatch();\n  const {\n    isSigningUp,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me) {\n      alert('로그인 했으니 메인페이지로 이동합니다. ');\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password_chk !== password) {\n      setPasswordError(true);\n      return false;\n    } else setPasswordError(false);\n\n    if (!term) {\n      setTermError(true);\n      return false;\n    }\n\n    setTermError(false);\n    setPasswordError(false);\n    console.log('11');\n    dispatch(signUpRequestAction({\n      userId: id,\n      nickname,\n      password\n    }));\n  }, [id, nick, password, password_chk, term]);\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === 'term') {\n      setCredentials(_objectSpread({}, userCredentials, {\n        [name]: e.target.checked\n      }));\n    } else setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"id\",\n    required: true,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"nickname\",\n    required: true,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"password\",\n    type: \"password\",\n    required: true,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"password_chk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), passwordError ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\") : null, __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"password_chk\",\n    type: \"password\",\n    required: true,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"term\",\n    required: true,\n    checked: userCredentials.term,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError ? __jsx(\"span\", {\n    style: {\n      color: 'blue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD574\\uC8FC\\uC138\\uC694.\") : null), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/pages/signup.js"],"names":["React","useState","useCallback","useEffect","Form","Input","Checkbox","Button","Router","useDispatch","useSelector","signUpRequestAction","LOAD_FOLLOW_REQUEST","useInput","initValue","value","setter","handler","e","target","Signup","userCredentials","setCredentials","id","nickname","email","password","password_chk","term","passwordError","setPasswordError","termError","setTermError","dispatch","isSigningUp","me","state","user","alert","push","onSubmit","preventDefault","console","log","userId","nick","onChange","name","checked","padding","color"],"mappings":"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","sourcesContent":["import React,{useState,useCallback,useEffect} from 'react';\r\nimport {Form, Input, Checkbox, Button} from 'antd';\r\nimport Router from 'next/router';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {signUpRequestAction, LOAD_FOLLOW_REQUEST} from '../reducers/user';\r\n\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value,setter] = useState(initValue);\r\n    const handler = useCallback( (e) =>{\r\n        setter(e.target.value);\r\n    },[]);\r\n    return [value, handler]; \r\n};\r\n\r\nconst Signup = () => {\r\n    const [userCredentials, setCredentials]= useState({\r\n        id: '',\r\n        nickname: '', \r\n        email: '',\r\n        password: '',\r\n        password_chk :'',\r\n        term: false, \r\n    })\r\n    const {id,nickname,password,password_chk, term} = userCredentials;\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const {isSigningUp, me} = useSelector((state) => state.user);\r\n    useEffect( () => {\r\n        if(me) {\r\n            alert('로그인 했으니 메인페이지로 이동합니다. ')\r\n            Router.push('/')\r\n        }\r\n    },[me && me.id]);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(password_chk !== password){\r\n            setPasswordError(true);\r\n            return false;  \r\n        } else setPasswordError(false); \r\n        if(!term){\r\n            setTermError(true); \r\n            return false; \r\n        }\r\n        setTermError(false); \r\n        setPasswordError(false);\r\n        console.log('11');\r\n        dispatch(signUpRequestAction({\r\n            userId: id,\r\n            nickname,\r\n            password\r\n        }))\r\n    },[id,nick,password,password_chk, term]);\r\n    const onChange = (e) => {\r\n        const {name,value} = e.target;\r\n        if(name==='term'){\r\n            setCredentials({...userCredentials, [name]: e.target.checked});\r\n        }\r\n        else setCredentials({...userCredentials, [name]:value});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{padding:10}}>\r\n                <div>\r\n                    <label htmlFor=\"id\">아이디</label>\r\n                    <br/>\r\n                    <Input name=\"id\" required onChange={onChange}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"nickname\">닉네임</label>\r\n                    <br/>\r\n                    <Input name=\"nickname\" required onChange={onChange}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">비밀번호</label>\r\n                    <br/>\r\n                    <Input name=\"password\" type=\"password\" required onChange={onChange}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password_chk\">비밀번호 확인</label>\r\n                    {\r\n                        passwordError ? \r\n                        <p>비밀번호가 일치하지 않습니다.</p>:\r\n                        null\r\n                    }\r\n                    <br/>\r\n                    <Input name=\"password_chk\" type=\"password\" required onChange={onChange}/>\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"term\"  required checked={userCredentials.term} onChange={onChange}>회원가입에 동의합니다.</Checkbox>\r\n                    {\r\n                        termError ?\r\n                        <span style={{color:'blue'}}>약관에 동의해주세요.</span>: \r\n                        null \r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}