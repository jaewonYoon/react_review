{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst dummyUser = {\n  nickname: 'Jay',\n  Post: [],\n  Followings: [],\n  Followers: []\n};\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport let INCREMENT_NUMBER;\nexport const loginAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data: {\n      nickname: 'Jay'\n    }\n  };\n};\nexport const logoutAction = {\n  type: LOG_OUT_REQUEST\n}; // 동적데이터를 전달하는 엑션 개체일 경우 매개변수를 사용한다. \n\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP_REQUEST,\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loginData: action.data,\n          isLoading: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: dummyUser,\n          isLoggedIn: true,\n          isLoading: false\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoading: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          me: null,\n          isLoading: false\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data,\n          isLoading: true\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggedIn","user","signUpData","loginData","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","INCREMENT_NUMBER","loginAction","data","type","logoutAction","signUpAction","reducer","state","action","isLoading","me"],"mappings":";;;;;;;;;;;;AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,KADI;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE,EAHE;AAIdC,EAAAA,SAAS,EAAE;AAJG,CAAlB;AAOA,MAAMC,YAAY,GAAC;AACfC,EAAAA,UAAU,EAAE,KADG;AAEfC,EAAAA,IAAI,EAAE,IAFS;AAGfC,EAAAA,UAAU,EAAE,EAHG;AAIfC,EAAAA,SAAS,EAAE;AAJI,CAAnB;AAOA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAE,gBAAtB;AACP,OAAO,MAAMC,cAAc,GAAE,gBAAtB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAIC,gBAAJ;AAEP,OAAO,MAAMC,WAAW,GAAGC,IAAI,IAAI;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAET,cADH;AAEHQ,IAAAA,IAAI,EAAE;AACFpB,MAAAA,QAAQ,EAAE;AADR;AAFH,GAAP;AAMH,CAPM;AAQP,OAAO,MAAMsB,YAAY,GAAG;AACxBD,EAAAA,IAAI,EAAEN;AADkB,CAArB,C,CAGP;;AACA,OAAO,MAAMQ,YAAY,GAAIH,IAAD,IAAU;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEZ,eADH;AAEHW,IAAAA;AAFG,GAAP;AAIH,CALM;;AAMP,MAAMI,OAAO,GAAG,CAACC,KAAK,GAACrB,YAAP,EAAoBsB,MAApB,KAA+B;AAC3C,UAAOA,MAAM,CAACL,IAAd;AACI,SAAKT,cAAL;AAAoB;AAChB,iCACOa,KADP;AAEIjB,UAAAA,SAAS,EAAEkB,MAAM,CAACN,IAFtB;AAGIO,UAAAA,SAAS,EAAE;AAHf;AAKH;;AACD,SAAKd,cAAL;AAAqB;AACjB,iCACOY,KADP;AAEIG,UAAAA,EAAE,EAAE7B,SAFR;AAGIM,UAAAA,UAAU,EAAE,IAHhB;AAIIsB,UAAAA,SAAS,EAAE;AAJf;AAMH;;AACD,SAAKZ,eAAL;AAAsB;AAClB,iCACOU,KADP;AAEIE,UAAAA,SAAS,EAAE;AAFf;AAIH;;AACD,SAAKX,eAAL;AAAqB;AACjB,iCACOS,KADP;AAEIpB,UAAAA,UAAU,EAAE,KAFhB;AAGIuB,UAAAA,EAAE,EAAE,IAHR;AAIID,UAAAA,SAAS,EAAE;AAJf;AAMH;;AACD,SAAKlB,eAAL;AAAuB;AACnB,iCACOgB,KADP;AAEIlB,UAAAA,UAAU,EAAEmB,MAAM,CAACN,IAFvB;AAGIO,UAAAA,SAAS,EAAE;AAHf;AAKH;;AACD;AAAS;AACL,iCACOF,KADP;AAEIlB,UAAAA,UAAU,EAAEmB,MAAM,CAACN;AAFvB;AAIH;AA1CL;AA4CH,CA7CD;;AA+CA,eAAeI,OAAf","sourcesContent":["const dummyUser = {\r\n    nickname: 'Jay',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [], \r\n};\r\n\r\nconst initialState={\r\n    isLoggedIn: false,\r\n    user: null,\r\n    signUpData: {},\r\n    loginData: {}\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS= 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE= 'LOG_IN_FAILURE'; \r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport let INCREMENT_NUMBER;\r\n\r\nexport const loginAction = data => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data: {\r\n            nickname: 'Jay',\r\n        }\r\n    }\r\n};\r\nexport const logoutAction = {\r\n    type: LOG_OUT_REQUEST,\r\n}\r\n// 동적데이터를 전달하는 엑션 개체일 경우 매개변수를 사용한다. \r\nexport const signUpAction = (data) => {\r\n    return {\r\n        type: SIGN_UP_REQUEST,\r\n        data \r\n    };\r\n}\r\nconst reducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case LOG_IN_REQUEST:{\r\n            return {\r\n                ...state,\r\n                loginData: action.data,\r\n                isLoading: true,\r\n                }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return{\r\n                ...state,\r\n                me: dummyUser,\r\n                isLoggedIn: true,\r\n                isLoading: false \r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        }\r\n        case LOG_OUT_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                me: null,\r\n                isLoading: false\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST : {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n                isLoading: true,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data, \r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}