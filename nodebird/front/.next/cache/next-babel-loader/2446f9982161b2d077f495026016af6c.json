{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst dummyUser = {\n  nickname: 'Jay',\n  Post: [],\n  Followings: [],\n  Followers: []\n};\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const SIGN_UP = 'SIGN_UP';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: 'Jay'\n  }\n};\nexport const logoutAction = {\n  type: LOG_OUT\n}; // 동적데이터를 전달하는 엑션 개체일 경우 매개변수를 사용한다. \n\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","initialState","isLoggedIn","user","signUpData","loginData","SIGN_UP","LOG_IN","LOG_OUT","LOG_IN_SUCCESS","loginAction","type","data","logoutAction","signUpAction","reducer","state","action"],"mappings":";;;;;;;;;;;;AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,KADI;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE,EAHE;AAIdC,EAAAA,SAAS,EAAE;AAJG,CAAlB;AAOA,MAAMC,YAAY,GAAC;AACfC,EAAAA,UAAU,EAAE,KADG;AAEfC,EAAAA,IAAI,EAAE,IAFS;AAGfC,EAAAA,UAAU,EAAE,EAHG;AAIfC,EAAAA,SAAS,EAAE;AAJI,CAAnB;AAOA,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,cAAc,GAAE,gBAAtB;AAEP,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAEJ,MADiB;AAEvBK,EAAAA,IAAI,EAAE;AACFf,IAAAA,QAAQ,EAAE;AADR;AAFiB,CAApB;AAMP,OAAO,MAAMgB,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAAEH;AADkB,CAArB,C,CAGP;;AACA,OAAO,MAAMM,YAAY,GAAIF,IAAD,IAAU;AAClC,SAAO;AACHD,IAAAA,IAAI,EAAEL,OADH;AAEHM,IAAAA;AAFG,GAAP;AAIH,CALM;;AAMP,MAAMG,OAAO,GAAG,CAACC,KAAK,GAACf,YAAP,EAAoBgB,MAApB,KAA+B;AAC3C,UAAOA,MAAM,CAACN,IAAd;AACI,SAAKJ,MAAL;AAAY;AACX,iCACMS,KADN;AAEGd,UAAAA,UAAU,EAAE,IAFf;AAGGC,UAAAA,IAAI,EAAEP;AAHT;AAKA;;AACD,SAAKY,OAAL;AAAc;AACV,iCACOQ,KADP;AAEId,UAAAA,UAAU,EAAE,KAFhB;AAGIC,UAAAA,IAAI,EAAE;AAHV;AAKH;;AACD,SAAKG,OAAL;AAAe;AACX,iCACOU,KADP;AAIH;;AACD;AAAS;AACL,iCACOA,KADP;AAEIZ,UAAAA,UAAU,EAAEa,MAAM,CAACL;AAFvB;AAIH;AA1BL;AA4BH,CA7BD;;AA+BA,eAAeG,OAAf","sourcesContent":["const dummyUser = {\r\n    nickname: 'Jay',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [], \r\n};\r\n\r\nconst initialState={\r\n    isLoggedIn: false,\r\n    user: null,\r\n    signUpData: {},\r\n    loginData: {}\r\n};\r\n\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const LOG_IN_SUCCESS= 'LOG_IN_SUCCESS';\r\n\r\nexport const loginAction = {\r\n    type: LOG_IN,\r\n    data: {\r\n        nickname: 'Jay',\r\n    },\r\n};\r\nexport const logoutAction = {\r\n    type: LOG_OUT,\r\n}\r\n// 동적데이터를 전달하는 엑션 개체일 경우 매개변수를 사용한다. \r\nexport const signUpAction = (data) => {\r\n    return {\r\n        type: SIGN_UP,\r\n        data \r\n    };\r\n}\r\nconst reducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case LOG_IN:{\r\n         return {\r\n            ...state,\r\n            isLoggedIn: true,\r\n            user: dummyUser,\r\n            }\r\n        }\r\n        case LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false, \r\n                user: null, \r\n            }\r\n        }\r\n        case SIGN_UP : {\r\n            return {\r\n                ...state,\r\n                \r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data, \r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}