{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaewon\\\\Desktop\\\\web\\\\react_review\\\\nodebird\\\\front\\\\components\\\\PostForm.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setContext } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  useEffect(function () {\n    setText('');\n  }, [addedPost === true]);\n  var onSubmitForm = usecallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, []);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  });\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" \\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    isLoading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\uC9F9\\uCA31\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3000/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/components/PostForm.jsx"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","useDispatch","setContext","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","addedPost","onSubmitForm","usecallback","type","data","onChangeText","e","target","value","margin","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React,{useCallback,useState,useEffect} from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { setContext } from 'redux-saga/effects';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [text,setText] = useState('');\r\n    const {imagePaths, isAddingPost, postAdded} = useSelector( (state) => state.post); \r\n    \r\n    useEffect( () => {\r\n        setText('')\r\n    },[addedPost===true]);\r\n    const onSubmitForm = usecallback(() => {\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                text,\r\n            }\r\n        })\r\n    },[]);\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    });\r\n    return (\r\n    <Form style={{margin: '10px 0 20px'}} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n                    <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" onChange = {onChangeText}/>    \r\n                    <div>\r\n                        <input type=\"file\" multiple hidden />\r\n                        <Button> 이미지 업로드</Button>\r\n                        <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\" isLoading={isAddingPost}>짹쨱</Button>\r\n                    </div>\r\n                    <div>\r\n                        {imagePaths.map( (v,i) => {\r\n                            return (\r\n                                <div key={v} style={{display: 'inline-block'}}>\r\n                                    <img src={'http://localhost:3000/' + v} style={{width:'200px'}} alt={v} />\r\n                                    <div>\r\n                                        <Button>제거</Button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div> \r\n                </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}