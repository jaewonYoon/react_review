{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst dummyUser = {\n  nickname: 'Jay',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  id: 1\n};\nconst initialState = {\n  isLoggedIn: false,\n  //로그인 여부 \n  isLoggingOut: false,\n  //로그아웃 시도중 \n  isLoggingIn: false,\n  //로그인 시도중 \n  loginErrorReason: '',\n  //로그인 에러 사유 \n  signedUp: false,\n  //회원가입 성공\n  isSigningUp: false,\n  //회원가입 시도 중 \n  signUpErrorReason: '',\n  //회원가입 실패 사유\n  me: null,\n  //내 정보 \n  followingList: [],\n  //팔로잉 리스트,\n  follwerList: [],\n  //팔로워 리스트,\n  userInfo: null //남의 정보\n\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const signUpAction = data => ({\n  type: SIGN_UP_REQUEST,\n  data\n});\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const logoutRequestAction = {\n  type: LOG_OUT_REQUEST\n};\nexport const signUpRequestAction = data => ({\n  type: SIGN_UP_REQUEST,\n  data\n});\nexport const loginAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data: {\n      nickname: 'Jay'\n    }\n  };\n};\nexport const logoutAction = {\n  type: LOG_OUT_REQUEST\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          isLoading: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","id","initialState","isLoggedIn","isLoggingOut","isLoggingIn","loginErrorReason","signedUp","isSigningUp","signUpErrorReason","me","followingList","follwerList","userInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","signUpAction","data","type","signUpSuccess","loginRequestAction","logoutRequestAction","signUpRequestAction","loginAction","logoutAction","state","action","isLoading","logInErrorReason","error","isSignedUp","signUpData"],"mappings":"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","sourcesContent":["const dummyUser = {\r\n    nickname: 'Jay',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [], \r\n    id: 1\r\n};\r\n\r\nconst initialState={\r\n    isLoggedIn: false, //로그인 여부 \r\n    isLoggingOut: false, //로그아웃 시도중 \r\n    isLoggingIn: false, //로그인 시도중 \r\n    loginErrorReason: '', //로그인 에러 사유 \r\n    signedUp: false, //회원가입 성공\r\n    isSigningUp: false, //회원가입 시도 중 \r\n    signUpErrorReason: '', //회원가입 실패 사유\r\n    me: null, //내 정보 \r\n    followingList: [], //팔로잉 리스트,\r\n    follwerList: [], //팔로워 리스트,\r\n    userInfo: null, //남의 정보\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS= 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE= 'LOG_IN_FAILURE'; \r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\r\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'; \r\n\r\nexport const signUpAction = data => ({\r\n    type: SIGN_UP_REQUEST,\r\n    data\r\n});\r\nexport const signUpSuccess = {\r\n    type: SIGN_UP_SUCCESS\r\n}\r\nexport const loginRequestAction = data => ({\r\n    type: LOG_IN_REQUEST,\r\n    data\r\n});\r\nexport const logoutRequestAction = ({\r\n    type: LOG_OUT_REQUEST \r\n}); \r\nexport const signUpRequestAction = data => ({\r\n    type: SIGN_UP_REQUEST,\r\n    data \r\n});\r\n\r\nexport const loginAction = data => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data: {\r\n            nickname: 'Jay',\r\n        }\r\n    }\r\n};\r\nexport const logoutAction = {\r\n    type: LOG_OUT_REQUEST,\r\n}\r\n\r\nexport default (state=initialState,action) => {\r\n    switch(action.type){\r\n        case LOG_IN_REQUEST:{\r\n            return {\r\n                ...state,\r\n                isLoggingIn:true,\r\n                }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return{\r\n                ...state,\r\n                isLoggedIn: true,\r\n                isLoading: false,\r\n                me: action.data,\r\n                isLoading: false,\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: false,\r\n                logInErrorReason: action.error,\r\n                me: null \r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n            }\r\n        }\r\n        case LOG_OUT_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                isLoggingOut: false,\r\n                me: null,\r\n            }\r\n        }\r\n        case LOAD_USER_REQUEST : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case LOAD_USER_SUCCESS : {\r\n            return{\r\n                ...state,\r\n                me: action.data\r\n            }\r\n        }\r\n        case LOAD_USER_FAILURE : {\r\n             return {\r\n                 ...state,\r\n             }\r\n        }\r\n        case SIGN_UP_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isSigningUp: true, \r\n            }\r\n        }\r\n        case SIGN_UP_SUCCESS : {\r\n            return{\r\n                ...state,\r\n                isSigningUp:false,\r\n                isSignedUp: true,\r\n            }\r\n        }\r\n        case SIGN_UP_FAILURE : {\r\n             return {\r\n                 ...state,\r\n                 isSigningUp:false,\r\n                 signUpErrorReason: action.error\r\n             }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data, \r\n            };\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}