{"ast":null,"code":"import { all, fork, takeLatest, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\nconst HELLO_SAGA = 'HELLO_SAGA';\n\nfunction loginAPI() {//서버에 API 요청을 보내는 부분 \n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI); //실패하면 catch(e)로 \n\n    yield put({\n      //loginAPI 성공 \n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      //loginAPI 실패 \n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n  yield all([watchLogin() // watchSignUp()\n  ]);\n}","map":{"version":3,"sources":["C:/Users/jaewon/Desktop/web/react_review/nodebird/front/sagas/user.js"],"names":["all","fork","takeLatest","call","put","take","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","HELLO_SAGA","loginAPI","login","type","e","console","error","watchLogin","takeEvery","LOG_IN_REQUEST","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,UAAnB,EAA+BC,IAA/B,EAAqCC,GAArC,EAA0CC,IAA1C,QAAqD,oBAArD;AACA,SAAQC,MAAR,EAAgBC,cAAhB,EAAgCC,cAAhC,QAAqD,kBAArD;AAEA,MAAMC,UAAU,GAAG,YAAnB;;AAEA,SAASC,QAAT,GAAoB,CAChB;AACH;;AACD,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC,UAAMR,IAAI,CAACO,QAAD,CAAV,CADD,CACuB;;AACtB,UAAMN,GAAG,CAAC;AAAE;AACRQ,MAAAA,IAAI,EAAEL;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMM,CAAN,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMT,GAAG,CAAE;AAAC;AACRQ,MAAAA,IAAI,EAAEJ;AADC,KAAF,CAAT;AAGH;AACJ;;AACD,UAAUQ,UAAV,GAAuB;AACnB,QAAMC,SAAS,CAACC,cAAD,EAAiBP,KAAjB,CAAf;AACH;;AACD,eAAe,UAAUQ,QAAV,GAAqB;AAChC,QAAMnB,GAAG,CAAC,CACNgB,UAAU,EADJ,CAEN;AAFM,GAAD,CAAT;AAIH","sourcesContent":["import {all, fork, takeLatest, call, put ,take} from 'redux-saga/effects';\r\nimport {LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE} from '../reducers/user';\r\n\r\nconst HELLO_SAGA = 'HELLO_SAGA'; \r\n\r\nfunction loginAPI() {\r\n    //서버에 API 요청을 보내는 부분 \r\n}\r\nfunction* login(){\r\n    try{\r\n        yield call(loginAPI); //실패하면 catch(e)로 \r\n        yield put({ //loginAPI 성공 \r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        console.error(e); \r\n        yield put( {//loginAPI 실패 \r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\nfunction* watchLogin() {\r\n    yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        watchLogin(),\r\n        // watchSignUp()\r\n    ]) \r\n}"]},"metadata":{},"sourceType":"module"}